{"componentChunkName":"component---src-templates-course-content-template-js","path":"/luku-5/3-rakenteinen-tieto","result":{"data":{"page":{"htmlAst":{"type":"element","tagName":"div","properties":{},"children":[{"type":"element","tagName":"div","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"lead","properties":{},"children":[{"type":"text","value":"Rakenteinen tieto tarkoittaa yhtä tietoalkiota suurempia tietokokonaisuuksia, jotka loogisesti liittyvät toisiinsa. Tyypillisiä tällaisia tietoja ovat erilaiset taulukot, tietueet ja näiden yhdistelmät.\n"}]},{"type":"text","value":"\n"}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Kuten Tietokoneen toiminnan perusteet -kurssilla jo kävimme läpi, rakenteiseen tietoon viittaaminen tapahtuu yleisesti ottaen tietorakenteen alkuosoitteen ja indeksirekisterin avulla. Joissakin tapauksissa viittaaminen on helppoa ja voidaan suorittaa yhden konekäskyn avulla hyödyntäen jotain sitä varten toteutettua tiedonosoitusmoodia, kun taas monimutkaisimmissa tapauksissa viitatun tiedon osoitteen laskenta vaatii usean konekäskyn suorituksen."}]},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"1-ulotteiset taulukot ja tietueet"}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Yleisimmät tapaukset ovat peräkkäistalletetut 1-ulotteinen taulukko ja tietue. Peräkkäistalletus tarkoittaa sitä, että koko taulukko tai tietue on talletettu muistissa peräkkäisiin muistipaikkoihin. 1-ulotteisen taulukon alkion osoite on yksinkertaisesti taulukon alkuosoite lisättynä indeksin osoittaman määrällä. Tässä perustapauksessa oletamme, että taulukon alkion koko on yksi sana. Useimmissa konekielissä on tätä perustapausta varten indeksoitu tiedonosoitusmuoto, jolloin taulukon alkioon viittaaminen voidaan tehdä yhdellä konekäskyllä. Siinä taulukon alkuosoite on käskyn vakio-osassa ja viitatun alkion indeksi indeksirekisterissä."}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"text"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-text"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"      load r1, =0       ;  muuntelumuuttujan i alustus, arvo r1:ssä\nloop  comp r1, =30      ; silmukan lopetustesti\n      jequ done\n      load r2, r1       ; silmukan runko\n      mul  r2, =4\n      store r2, A(r1)   ; taulukon A viitatun alkion indeksi on r1:ssä\n      add r1, =1        ; lisätään muuntelumuuttujan arvoa yhdellä\n      jump loop\ndone  nop               ; poistu silmukasta"}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Toinen tyypillinen ohjelmissa käytetty tietorakenne on tietue, jossa samaan tietoon liittyvät eri kentät on talletettu peräkkäisiin muistipaikkoihin. Tällä kertaa viitatun tiedon (tietueen jokin kenttä) osoite saadaan laskemalla yhteen tietueen alkuosoite ja viitatun kentän suhteellinen sijainti tietueen sisällä. Vähän yllättävästi, tällaiseenkin tietoon viittaaminen voidaan toteuttaa indeksoidulla tiedonosoitusmoodilla yhdessä konekäskyssä. Tällä kertaa kuitenkin tietueen alkuosoite annetaan indeksirekisterissä ja viitatun kentän suhteellinen sijainti on käskyn vakiokentässä."}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"text"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-text"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"Id      equ 0        ; tietueen Person kenttien suhteelliset sijainnit\nAge     equ 1\nNr      equ 2\n\nPer0    ds 3         ; kolme kappaletta Person-tyyppistä tietuetta\nPer1    ds 3\nPer2    ds 3\n\n...               ; tietueiden alustus ja muuta koodia\n\n   load r2, =Per1      ; r2 osoittaa tietueeseen Per1\n   load  r1, Nr(r2)    ; hae rekisteriin r1 rekisterin r2\n                       ; osoittaman tietueen kentän Nr arvo"}]}]}]},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"2-ulotteiset taulukot"}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Moniulotteiset taulukot ovat jo vaikeampi tapaus. Useimmissa konekielissä ei ole niitä tukevia tiedonosoitusmoodeja, joten tietoon viittaaminen tapahtuu kahdessa vaiheessa. Ensin ohjelmassa lasketaan viitatun tiedon suhteellinen sijainti rakenteisen tiedon sisällä ja sitten indeksoitua tiedonosoitusmoodia käyttäen tehdään varsinainen tiedonosoitus."}]},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Talletus riveittäin"}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"2-ulotteiset taulukot voidaan tallettaa muistiin ainakin kolmella tavalla. Ne voidaan tallettaa yhtenäiselle alueelle "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"riveittäin"}]},{"type":"text","value":", jolloin esimerkiksi osoitteeseen 300 talletettu taulukko T[2,3]"}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"text"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-text"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"25  88  2\n11  66  3"}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"talletetaan rivi kerrallaan muistiin peräkkäisiin muistipaikkoihin, muistipaikasta 300 alkaen."}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"text"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-text"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"300: 25  88  2 11  66  3"}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Nyt taulukon alkion T[i,j], missä i ilmaisee rivin ja j sarakkeen, osoite on T + 3*i + j ja alkioon T[i,j] viittaaminen tapahtuu seuraavasti (huomioi, että rivin ja sarakkeen indeksointi alkaa nollasta):"}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"text"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-text"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"     load r1, i\n     mul r1, =3\n     add r1, j\n     load r2, T(r1)  ; lataa r2:een alkion T[i,j] arvo"}]}]}]},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Talletus sarakkeittain"}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Jos taulukko T on talletettu sarakkeittain yhtenäiselle muistialueelle, niin se on talletettu järjestyksessä"}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"text"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-text"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"300: 25  11 88  66  2  3"}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Alkion T[i,j] osoite on T + i + 2*j ja alkioon T[i,j] viittaaminen tapahtuu esimerkiksi näin:"}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"text"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-text"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"     load r1, j\n     mul r1, =2\n     add r1, i\n     load r2, T(r1)  ; lataa r2:een alkion T[i,j] arvo"}]}]}]},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Talletus linkitettynä rakenteena"}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Kolmas vaihtoehto on tallettaa (esim.) kukin rivi kerrallaan omalle yhtenäiselle muistialueelleen ja rivien alkuosoitteet 1-ulotteiseen taulukkoon. Taulukko T voisi nyt olla talletettu muistiin esim. seuraavasti:"}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"text"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-text"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"400: 25  88  2            (rivi 0)\n430: 11  66  3            (rivi 1)\n300: 400 430              (Taulukon T rivien osoitteet)"}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Huomaa, että taulukko T voi olla nyt talletettuna epäyhtenäisille alueille keskusmuistiin. Alkioon T[i,j] viittaaminen tapahtuu nyt kaksivaiheisesti. Ensin haetaan rivin i osoite taulukosta T ja sitten tehdään varsinainen viite kyseisen rivin alkioon j."}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"text"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-text"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"     load r1, i\n     load r1, T(r1)    ; rivin T[i] osoite\n     add r1, j         ; alkion T[i,j] osoite\n     load r2, 0(r1)    ; lataa r2:een alkion T[i,j] arvo"}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Kuten edellä olevista esimerkeistä ilmenee, kaikki kolme tapaa ovat yhtä helposti käytettävissä. Yhtenäisessä talletusmuodossa etuna on selkeys. Linkitetyn rakenteen hyvänä puolena on se, että varsinkin suurten taulukoiden yhteydessä niitä ei tarvitse tallettaa yhtenäiselle muistilohkolle. Lisäksi linkitetyssä rakenteessa voi optimoida tilankäyttöä esim. siten, että tällä hetkellä vielä alustamattomille riveille ei ole vielä varattu muistitilaa. Alustamaton rivi merkitään esim. riviosoitteena 0 ja riville varataan muistitila vasta siihen kohdistuvan ensimmäisen viittauksen yhteydessä."}]},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Moniulotteiset taulukot"}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Moniulotteiset taulukot talletetaan aivan vastaavasti. Käytetään esimerkkinä osoitteeseen 600 talletettua 3-ulotteista taulukkoa S[2,3,4]. Siinä on siis 2 tasoa (tasot 0 ja 1), kullakin tasolla 3 riviä ja kullakin rivillä 4 alkiota. Tasolla 0 on alkiot"}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"text"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-text"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"000 001 002 003\n010 011 012 013\n020 021 022 023"}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"ja tasolla 1 alkiot"}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"text"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-text"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"100 101 102 103\n110 111 112 113\n120 121 122 123"}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Alkioiden arvot on tässä esimerkissä valittu tahallaan siten, että arvot vastaavat alkioiden indeksejä taulukossa S. Esimerkiksi alkion S[1,2,1] arvo on 121. Huomaa, että taulukkoon viitattaessa kunkin indeksin täytyy olla omalla nollasta alkavalla arvoalueellaan, mikä on kullekin indeksille annettu taulukon määrittelyvaiheessa."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Jos S on talletettu \"riveittäin\", niin alkiot ovat muistissa riveittäin taso kerrallaan järjestyksessä"}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"text"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-text"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"600: 000 001 002 003  010 011 012 013  020 021 022 023  (taso i=0)\n612: 100 101 102 103  110 111 112 113  120 121 122 123  (taso i=1)"}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"ja niihin voisi viitata esimerkiksi seuraavalla tavalla."}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"text"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-text"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"     ; laske tason i (suhteellinen) osoite (taulukossa S)\n     load r1, i\n     mul r1, =12   ; joka tasossa 12 sanaa\n\n     ; laske rivin j osoite tasolla i\n     load r2, j\n     mul r2, =4    ; joka rivillä 4 sanaa\n     add r1, r2\n\n     ; laske alkion k osoite rivillä j tasolla i\n     add r1, k\n\n     ; tee varsinainen muistiviite\n     load r2, S(r1)  ; lataa r2:een alkion S[i,j,k] arvo"}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Jos S on talletettu sarakkeittain, niin tasoja on viimeisen indeksin mukaisesti neljä ja alkiot ovat muistissa järjestyksessä"}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"text"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-text"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"600: 000 100 010 110 020 120     (taso k=0)\n606: 001 101 011 111 021 121     (taso k=1)\n612: 002 102 012 112 022 122     (taso k=2)\n618: 003 103 013 113 023 123     (taso k=3)"}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Viite (r2 = S[i,j,k]) toteutuu nyt käskyillä"}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"text"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-text"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"     load r1, k\n     mul r1, =6   ; joka tasossa 6 sanaa\n     load r2, j\n     mul r2, =2    ; joka sarakkeella 2 sanaa\n     add r1, r2\n     add r1, i\n     load r2, S(r1)  ; lataa r2:een alkion S[i,j,k] arvo"}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Jos S on talletettu (riveittäin) linkitettynä rakenteena, niin tallennus voisi olla"}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"text"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-text"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"700:  000 001 002 003  (rivi S[0,0,*])\n301:  010 011 012 013  (rivi S[0,1,*])\n802:  020 021 022 023  (rivi S[0,2,*])\n510:  100 101 102 103  (rivi S[1,0,*])\n611:  110 111 112 113  (rivi S[1,1,*])\n712:  120 121 122 123  (rivi S[1,2,*])\n\n630:  700  301  802    (tason S[0,*,*] rivien osoitteet)\n541:  510  611  712    (tason S[1,*,*] rivien osoitteet)\n\n600:  630   541       (taulukon S tasojen osoitteet)"}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Viite (r2 = S[i,j,k]) toteutuu nyt käskyillä"}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"text"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-text"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"     load r1, i\n     load r2, S(r1)    ; tason i osoite\n     add r2, j         ; rivin j osoitteen osoite\n     load r1, 0(r2)    ; rivin j osoite tasolla i\n     add r1, k         ; alkio k osoite rivillä j tasolla i\n     load r2, S(r1)    ; lataa r2:een alkion S[i,j,k] arvo"}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Nämä kaikki moniulotteisten taulukoiden talletusmuodot ovat käytössä. Useimmiten korkean tason kielellä ohjelmoitaessa niillä ei ole kovin paljon väliä, koska talletusmuoto ei näy korkean tason ohjelmointikielellä ohjelmoitaessa. Joissakin tapauksissa ohjelmien suoritusnopeutta voidaan kuitenkin huomattavasti nopeuttaa, jos talletusjärjestys otetaan huomioon koodissa. Jos esimerkiksi käydään läpi 2-ulotteisen taulukon kaikki alkiot, niin välimuisti tekee niiden läpikäynnin muistiintallennusjärjestyksessä huomattavasti nopeammaksi kuin jossakin muussa järjestyksessä. Valitettavasti 2-ulotteisia taulukoita tarvitsee usein käydä läpi niin sarakkeittain kuin riveittäin, joten kumpi tahansa talletusmuoto on aina joskus huono."}]},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Monimutkaiset rakenteiset tietorakenteet"}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Monimutkaisemmat tietorakenteet talletetaan muistiin vastaavilla tavoilla. Usein talletusmuoto määräytyy suoraan käytettävän ohjelmointikielen perusteella, mutta joissakin tilanteissa ohjelmoija voi päästä vaikuttamaan talletusmuotoon itsekin. Kulloinkin käytössä oleva talletusmuoto pitää sitten tietenkin huomioida hyvin huolella jokaisen dataviitteen kohdalla."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Esimerkiksi, jos R[20,30] on riveittäin talletettu 2-ulotteinen taulukko, jonka kukin alkio on 14-sanainen tietue, jonka kentät ovat "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"id"}]},{"type":"text","value":", "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"lkm"}]},{"type":"text","value":" ja 12-alkioinen taulukko "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"pisteet"}]},{"type":"text","value":", niin viite alkioon R[i,j].pisteet[kk] voisi olla toteutettuna"}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"text"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-text"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"     ; rivin i osoite R:ssä\n     load r1, i\n     mul  r1, =420   ; rivillä 30 tietuetta, kussakin 14 sanaa\n\n     ; alkion j osoite rivillä i\n     load r2, j\n     mul r2, 14      ; kussakin alkiossa 14 sanaa\n     add r1, r2      ; alkion R[i,j] suhteellinen osoite R:n sisällä\n\n     ; kentän pisteet osoite alkiossa R[i,j]\n     add r1, =2      ; taulukon R[i,j] kentän pisteet suhteellinen osoite\n\n     ; alkion kk osoite taulukossa pisteet\n     add r1, kk      ; alkion R[i,j].pisteet[kk] suhteellinen osoite\n\n     ; tee muistiviite\n     load r2, R(r1)  ; lataa r2:een alkion R[i,j].pisteet[kk] arvo"}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Toteutus on monimutkaisellakin rakenteella siis hyvin suoraviivainen. Kääntäjät generoivat tällaista koodia hyvin helposti ja luotettavasti."}]},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Indeksitarkistukset"}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Indeksitarkistusten avulla pyritään suojaamaan järjestelmää tietynlaisilta ohjelmointivirheiltä ja tietosuojahyökkäyksiltä. Ajatellaanpa esimerkiksi tilannetta, jossa osoitteeseen 200 talletetulle taulukolle T[20] on varattu tilaa 20 sanaa, ja siihen kohdistuu viittaus \"X = T[N]\", kun N:n arvo on 73. Nyt X:n arvoksi tulee muistipaikan 93 arvo, vaikka kyseinen muistipaikka ei edes kuulu taulukolle T. Vastaavasti viitteellä \"T[-187] = Z\" voidaan asettaa muistipaikan 13 arvoksi muuttujan Z arvo. Jos muuttujan Z arvo oli esimerkiksi 35651571, niin muistipaikassa 13 ollut konekäsky olisi näin vaihdettu konekäskyyn \"add r1, =87\"."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Usein tällaiset taulukon ulkopuolelle tapahtuvat "},{"type":"element","tagName":"a","properties":{"href":"https://fi.wikipedia.org/wiki/Puskurin_ylivuotovirhe","target":"_blank","rel":["noopener","noreferrer"]},"children":[{"type":"text","value":"puskurin ylivuotovirheet"}]},{"type":"text","value":" ovat tavallisia ohjelmointivirheitä, jossa esimerkiksi silmukan päättymisehdon toteutus sallii silmukan suorittamisen yhden kerran liikaa tai yhden kerran liian vähän. Joissakin tapauksissa virhe on kuitenkin sellainen, että indeksin arvoa ei tarkisteta ennen taulukkoviitteen käyttöä ja pahantahtoinen "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"hyökkääjä"}]},{"type":"text","value":" voi silloin ehkä käyttää tilannetta hyödykseen "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"puskurin ylivuotohyökkäyksen"}]},{"type":"text","value":" tekemiseen. Tällöin taulukon T kautta hyökkääjä voi muuttaa järjestelmän kriittisiä tietokenttiä tai sijoittaa haittaohjelman järjestelmän suoritettavaksi."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Yksinkertainen tapa torjua tällaiset ongelmat on joka kerta taulukkoviitteen yhteydessä tarkistaa indeksin (indeksien) laillisuus. Esimerkiksi aikaisempi taulukkoon T[2,3] kohdistuva viite \"r2 = T[i,j]\""}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"text"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-text"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"     load r1, i\n     mul r1, =3\n     add r1, j\n     load r2, T(r1)  ; lataa r2:een alkion T[i,j] arvo"}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"olisi nyt muotoa"}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"text"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-text"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"     load r1, i           ; tarkista I\n     jneg r1, trouble\n     comp r1, =2\n     jnles trouble\n\n     load r2, j           ; tarkista j\n     jneg r2, trouble\n     comp r2, =3\n     jnles trouble\n\n     mul r1, =3\n     add r1, j\n     load r2, T(r1)  ; lataa r2:een alkion T[i,j] arvo\n\n     jump jatka\ntrouble svc sp, =BADINDEX  ; käsittele virhetilanne\njatka nop"}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Kuten tästä esimerkistä huomataan, tarkistusten hinta voi olla korkea suoritusnopeuden hidastuessa ylimääräisten suoritettavien konekäskyjen vuoksi. Toisaalta, haavoittuvaan järjestelmään kohdistuneen puskurin ylivuotohyökkäyksen kustannukset voivat olla valtaisat. On myös muita tapoja tehdä ja välttää indeksitarkistuksia sekä torjua puskurin ylivuotohyökkäyksiä, mutta ne eivät sisälly tämän kurssin oppimistavoitteisiin."}]}]},"html":"<div><div>\n<lead>Rakenteinen tieto tarkoittaa yhtä tietoalkiota suurempia tietokokonaisuuksia, jotka loogisesti liittyvät toisiinsa. Tyypillisiä tällaisia tietoja ovat erilaiset taulukot, tietueet ja näiden yhdistelmät.\n</lead>\n</div><p>Kuten Tietokoneen toiminnan perusteet -kurssilla jo kävimme läpi, rakenteiseen tietoon viittaaminen tapahtuu yleisesti ottaen tietorakenteen alkuosoitteen ja indeksirekisterin avulla. Joissakin tapauksissa viittaaminen on helppoa ja voidaan suorittaa yhden konekäskyn avulla hyödyntäen jotain sitä varten toteutettua tiedonosoitusmoodia, kun taas monimutkaisimmissa tapauksissa viitatun tiedon osoitteen laskenta vaatii usean konekäskyn suorituksen.</p><h2>1-ulotteiset taulukot ja tietueet</h2><p>Yleisimmät tapaukset ovat peräkkäistalletetut 1-ulotteinen taulukko ja tietue. Peräkkäistalletus tarkoittaa sitä, että koko taulukko tai tietue on talletettu muistissa peräkkäisiin muistipaikkoihin. 1-ulotteisen taulukon alkion osoite on yksinkertaisesti taulukon alkuosoite lisättynä indeksin osoittaman määrällä. Tässä perustapauksessa oletamme, että taulukon alkion koko on yksi sana. Useimmissa konekielissä on tätä perustapausta varten indeksoitu tiedonosoitusmuoto, jolloin taulukon alkioon viittaaminen voidaan tehdä yhdellä konekäskyllä. Siinä taulukon alkuosoite on käskyn vakio-osassa ja viitatun alkion indeksi indeksirekisterissä.</p><div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">      load r1, =0       ;  muuntelumuuttujan i alustus, arvo r1:ssä\nloop  comp r1, =30      ; silmukan lopetustesti\n      jequ done\n      load r2, r1       ; silmukan runko\n      mul  r2, =4\n      store r2, A(r1)   ; taulukon A viitatun alkion indeksi on r1:ssä\n      add r1, =1        ; lisätään muuntelumuuttujan arvoa yhdellä\n      jump loop\ndone  nop               ; poistu silmukasta</code></pre></div><p>Toinen tyypillinen ohjelmissa käytetty tietorakenne on tietue, jossa samaan tietoon liittyvät eri kentät on talletettu peräkkäisiin muistipaikkoihin. Tällä kertaa viitatun tiedon (tietueen jokin kenttä) osoite saadaan laskemalla yhteen tietueen alkuosoite ja viitatun kentän suhteellinen sijainti tietueen sisällä. Vähän yllättävästi, tällaiseenkin tietoon viittaaminen voidaan toteuttaa indeksoidulla tiedonosoitusmoodilla yhdessä konekäskyssä. Tällä kertaa kuitenkin tietueen alkuosoite annetaan indeksirekisterissä ja viitatun kentän suhteellinen sijainti on käskyn vakiokentässä.</p><div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Id      equ 0        ; tietueen Person kenttien suhteelliset sijainnit\nAge     equ 1\nNr      equ 2\n\nPer0    ds 3         ; kolme kappaletta Person-tyyppistä tietuetta\nPer1    ds 3\nPer2    ds 3\n\n...               ; tietueiden alustus ja muuta koodia\n\n   load r2, =Per1      ; r2 osoittaa tietueeseen Per1\n   load  r1, Nr(r2)    ; hae rekisteriin r1 rekisterin r2\n                       ; osoittaman tietueen kentän Nr arvo</code></pre></div><h2>2-ulotteiset taulukot</h2><p>Moniulotteiset taulukot ovat jo vaikeampi tapaus. Useimmissa konekielissä ei ole niitä tukevia tiedonosoitusmoodeja, joten tietoon viittaaminen tapahtuu kahdessa vaiheessa. Ensin ohjelmassa lasketaan viitatun tiedon suhteellinen sijainti rakenteisen tiedon sisällä ja sitten indeksoitua tiedonosoitusmoodia käyttäen tehdään varsinainen tiedonosoitus.</p><h3>Talletus riveittäin</h3><p>2-ulotteiset taulukot voidaan tallettaa muistiin ainakin kolmella tavalla. Ne voidaan tallettaa yhtenäiselle alueelle <em>riveittäin</em>, jolloin esimerkiksi osoitteeseen 300 talletettu taulukko T[2,3]</p><div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">25  88  2\n11  66  3</code></pre></div><p>talletetaan rivi kerrallaan muistiin peräkkäisiin muistipaikkoihin, muistipaikasta 300 alkaen.</p><div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">300: 25  88  2 11  66  3</code></pre></div><p>Nyt taulukon alkion T[i,j], missä i ilmaisee rivin ja j sarakkeen, osoite on T + 3*i + j ja alkioon T[i,j] viittaaminen tapahtuu seuraavasti (huomioi, että rivin ja sarakkeen indeksointi alkaa nollasta):</p><div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">     load r1, i\n     mul r1, =3\n     add r1, j\n     load r2, T(r1)  ; lataa r2:een alkion T[i,j] arvo</code></pre></div><h3>Talletus sarakkeittain</h3><p>Jos taulukko T on talletettu sarakkeittain yhtenäiselle muistialueelle, niin se on talletettu järjestyksessä</p><div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">300: 25  11 88  66  2  3</code></pre></div><p>Alkion T[i,j] osoite on T + i + 2*j ja alkioon T[i,j] viittaaminen tapahtuu esimerkiksi näin:</p><div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">     load r1, j\n     mul r1, =2\n     add r1, i\n     load r2, T(r1)  ; lataa r2:een alkion T[i,j] arvo</code></pre></div><h3>Talletus linkitettynä rakenteena</h3><p>Kolmas vaihtoehto on tallettaa (esim.) kukin rivi kerrallaan omalle yhtenäiselle muistialueelleen ja rivien alkuosoitteet 1-ulotteiseen taulukkoon. Taulukko T voisi nyt olla talletettu muistiin esim. seuraavasti:</p><div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">400: 25  88  2            (rivi 0)\n430: 11  66  3            (rivi 1)\n300: 400 430              (Taulukon T rivien osoitteet)</code></pre></div><p>Huomaa, että taulukko T voi olla nyt talletettuna epäyhtenäisille alueille keskusmuistiin. Alkioon T[i,j] viittaaminen tapahtuu nyt kaksivaiheisesti. Ensin haetaan rivin i osoite taulukosta T ja sitten tehdään varsinainen viite kyseisen rivin alkioon j.</p><div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">     load r1, i\n     load r1, T(r1)    ; rivin T[i] osoite\n     add r1, j         ; alkion T[i,j] osoite\n     load r2, 0(r1)    ; lataa r2:een alkion T[i,j] arvo</code></pre></div><p>Kuten edellä olevista esimerkeistä ilmenee, kaikki kolme tapaa ovat yhtä helposti käytettävissä. Yhtenäisessä talletusmuodossa etuna on selkeys. Linkitetyn rakenteen hyvänä puolena on se, että varsinkin suurten taulukoiden yhteydessä niitä ei tarvitse tallettaa yhtenäiselle muistilohkolle. Lisäksi linkitetyssä rakenteessa voi optimoida tilankäyttöä esim. siten, että tällä hetkellä vielä alustamattomille riveille ei ole vielä varattu muistitilaa. Alustamaton rivi merkitään esim. riviosoitteena 0 ja riville varataan muistitila vasta siihen kohdistuvan ensimmäisen viittauksen yhteydessä.</p><h2>Moniulotteiset taulukot</h2><p>Moniulotteiset taulukot talletetaan aivan vastaavasti. Käytetään esimerkkinä osoitteeseen 600 talletettua 3-ulotteista taulukkoa S[2,3,4]. Siinä on siis 2 tasoa (tasot 0 ja 1), kullakin tasolla 3 riviä ja kullakin rivillä 4 alkiota. Tasolla 0 on alkiot</p><div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">000 001 002 003\n010 011 012 013\n020 021 022 023</code></pre></div><p>ja tasolla 1 alkiot</p><div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">100 101 102 103\n110 111 112 113\n120 121 122 123</code></pre></div><p>Alkioiden arvot on tässä esimerkissä valittu tahallaan siten, että arvot vastaavat alkioiden indeksejä taulukossa S. Esimerkiksi alkion S[1,2,1] arvo on 121. Huomaa, että taulukkoon viitattaessa kunkin indeksin täytyy olla omalla nollasta alkavalla arvoalueellaan, mikä on kullekin indeksille annettu taulukon määrittelyvaiheessa.</p><p>Jos S on talletettu \"riveittäin\", niin alkiot ovat muistissa riveittäin taso kerrallaan järjestyksessä</p><div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">600: 000 001 002 003  010 011 012 013  020 021 022 023  (taso i=0)\n612: 100 101 102 103  110 111 112 113  120 121 122 123  (taso i=1)</code></pre></div><p>ja niihin voisi viitata esimerkiksi seuraavalla tavalla.</p><div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">     ; laske tason i (suhteellinen) osoite (taulukossa S)\n     load r1, i\n     mul r1, =12   ; joka tasossa 12 sanaa\n\n     ; laske rivin j osoite tasolla i\n     load r2, j\n     mul r2, =4    ; joka rivillä 4 sanaa\n     add r1, r2\n\n     ; laske alkion k osoite rivillä j tasolla i\n     add r1, k\n\n     ; tee varsinainen muistiviite\n     load r2, S(r1)  ; lataa r2:een alkion S[i,j,k] arvo</code></pre></div><p>Jos S on talletettu sarakkeittain, niin tasoja on viimeisen indeksin mukaisesti neljä ja alkiot ovat muistissa järjestyksessä</p><div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">600: 000 100 010 110 020 120     (taso k=0)\n606: 001 101 011 111 021 121     (taso k=1)\n612: 002 102 012 112 022 122     (taso k=2)\n618: 003 103 013 113 023 123     (taso k=3)</code></pre></div><p>Viite (r2 = S[i,j,k]) toteutuu nyt käskyillä</p><div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">     load r1, k\n     mul r1, =6   ; joka tasossa 6 sanaa\n     load r2, j\n     mul r2, =2    ; joka sarakkeella 2 sanaa\n     add r1, r2\n     add r1, i\n     load r2, S(r1)  ; lataa r2:een alkion S[i,j,k] arvo</code></pre></div><p>Jos S on talletettu (riveittäin) linkitettynä rakenteena, niin tallennus voisi olla</p><div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">700:  000 001 002 003  (rivi S[0,0,*])\n301:  010 011 012 013  (rivi S[0,1,*])\n802:  020 021 022 023  (rivi S[0,2,*])\n510:  100 101 102 103  (rivi S[1,0,*])\n611:  110 111 112 113  (rivi S[1,1,*])\n712:  120 121 122 123  (rivi S[1,2,*])\n\n630:  700  301  802    (tason S[0,*,*] rivien osoitteet)\n541:  510  611  712    (tason S[1,*,*] rivien osoitteet)\n\n600:  630   541       (taulukon S tasojen osoitteet)</code></pre></div><p>Viite (r2 = S[i,j,k]) toteutuu nyt käskyillä</p><div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">     load r1, i\n     load r2, S(r1)    ; tason i osoite\n     add r2, j         ; rivin j osoitteen osoite\n     load r1, 0(r2)    ; rivin j osoite tasolla i\n     add r1, k         ; alkio k osoite rivillä j tasolla i\n     load r2, S(r1)    ; lataa r2:een alkion S[i,j,k] arvo</code></pre></div><p>Nämä kaikki moniulotteisten taulukoiden talletusmuodot ovat käytössä. Useimmiten korkean tason kielellä ohjelmoitaessa niillä ei ole kovin paljon väliä, koska talletusmuoto ei näy korkean tason ohjelmointikielellä ohjelmoitaessa. Joissakin tapauksissa ohjelmien suoritusnopeutta voidaan kuitenkin huomattavasti nopeuttaa, jos talletusjärjestys otetaan huomioon koodissa. Jos esimerkiksi käydään läpi 2-ulotteisen taulukon kaikki alkiot, niin välimuisti tekee niiden läpikäynnin muistiintallennusjärjestyksessä huomattavasti nopeammaksi kuin jossakin muussa järjestyksessä. Valitettavasti 2-ulotteisia taulukoita tarvitsee usein käydä läpi niin sarakkeittain kuin riveittäin, joten kumpi tahansa talletusmuoto on aina joskus huono.</p><h2>Monimutkaiset rakenteiset tietorakenteet</h2><p>Monimutkaisemmat tietorakenteet talletetaan muistiin vastaavilla tavoilla. Usein talletusmuoto määräytyy suoraan käytettävän ohjelmointikielen perusteella, mutta joissakin tilanteissa ohjelmoija voi päästä vaikuttamaan talletusmuotoon itsekin. Kulloinkin käytössä oleva talletusmuoto pitää sitten tietenkin huomioida hyvin huolella jokaisen dataviitteen kohdalla.</p><p>Esimerkiksi, jos R[20,30] on riveittäin talletettu 2-ulotteinen taulukko, jonka kukin alkio on 14-sanainen tietue, jonka kentät ovat <em>id</em>, <em>lkm</em> ja 12-alkioinen taulukko <em>pisteet</em>, niin viite alkioon R[i,j].pisteet[kk] voisi olla toteutettuna</p><div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">     ; rivin i osoite R:ssä\n     load r1, i\n     mul  r1, =420   ; rivillä 30 tietuetta, kussakin 14 sanaa\n\n     ; alkion j osoite rivillä i\n     load r2, j\n     mul r2, 14      ; kussakin alkiossa 14 sanaa\n     add r1, r2      ; alkion R[i,j] suhteellinen osoite R:n sisällä\n\n     ; kentän pisteet osoite alkiossa R[i,j]\n     add r1, =2      ; taulukon R[i,j] kentän pisteet suhteellinen osoite\n\n     ; alkion kk osoite taulukossa pisteet\n     add r1, kk      ; alkion R[i,j].pisteet[kk] suhteellinen osoite\n\n     ; tee muistiviite\n     load r2, R(r1)  ; lataa r2:een alkion R[i,j].pisteet[kk] arvo</code></pre></div><p>Toteutus on monimutkaisellakin rakenteella siis hyvin suoraviivainen. Kääntäjät generoivat tällaista koodia hyvin helposti ja luotettavasti.</p><h2>Indeksitarkistukset</h2><p>Indeksitarkistusten avulla pyritään suojaamaan järjestelmää tietynlaisilta ohjelmointivirheiltä ja tietosuojahyökkäyksiltä. Ajatellaanpa esimerkiksi tilannetta, jossa osoitteeseen 200 talletetulle taulukolle T[20] on varattu tilaa 20 sanaa, ja siihen kohdistuu viittaus \"X = T[N]\", kun N:n arvo on 73. Nyt X:n arvoksi tulee muistipaikan 93 arvo, vaikka kyseinen muistipaikka ei edes kuulu taulukolle T. Vastaavasti viitteellä \"T[-187] = Z\" voidaan asettaa muistipaikan 13 arvoksi muuttujan Z arvo. Jos muuttujan Z arvo oli esimerkiksi 35651571, niin muistipaikassa 13 ollut konekäsky olisi näin vaihdettu konekäskyyn \"add r1, =87\".</p><p>Usein tällaiset taulukon ulkopuolelle tapahtuvat <a href=\"https://fi.wikipedia.org/wiki/Puskurin_ylivuotovirhe\" target=\"_blank\" rel=\"noopener noreferrer\">puskurin ylivuotovirheet</a> ovat tavallisia ohjelmointivirheitä, jossa esimerkiksi silmukan päättymisehdon toteutus sallii silmukan suorittamisen yhden kerran liikaa tai yhden kerran liian vähän. Joissakin tapauksissa virhe on kuitenkin sellainen, että indeksin arvoa ei tarkisteta ennen taulukkoviitteen käyttöä ja pahantahtoinen <em>hyökkääjä</em> voi silloin ehkä käyttää tilannetta hyödykseen <em>puskurin ylivuotohyökkäyksen</em> tekemiseen. Tällöin taulukon T kautta hyökkääjä voi muuttaa järjestelmän kriittisiä tietokenttiä tai sijoittaa haittaohjelman järjestelmän suoritettavaksi.</p><p>Yksinkertainen tapa torjua tällaiset ongelmat on joka kerta taulukkoviitteen yhteydessä tarkistaa indeksin (indeksien) laillisuus. Esimerkiksi aikaisempi taulukkoon T[2,3] kohdistuva viite \"r2 = T[i,j]\"</p><div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">     load r1, i\n     mul r1, =3\n     add r1, j\n     load r2, T(r1)  ; lataa r2:een alkion T[i,j] arvo</code></pre></div><p>olisi nyt muotoa</p><div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">     load r1, i           ; tarkista I\n     jneg r1, trouble\n     comp r1, =2\n     jnles trouble\n\n     load r2, j           ; tarkista j\n     jneg r2, trouble\n     comp r2, =3\n     jnles trouble\n\n     mul r1, =3\n     add r1, j\n     load r2, T(r1)  ; lataa r2:een alkion T[i,j] arvo\n\n     jump jatka\ntrouble svc sp, =BADINDEX  ; käsittele virhetilanne\njatka nop</code></pre></div><p>Kuten tästä esimerkistä huomataan, tarkistusten hinta voi olla korkea suoritusnopeuden hidastuessa ylimääräisten suoritettavien konekäskyjen vuoksi. Toisaalta, haavoittuvaan järjestelmään kohdistuneen puskurin ylivuotohyökkäyksen kustannukset voivat olla valtaisat. On myös muita tapoja tehdä ja välttää indeksitarkistuksia sekä torjua puskurin ylivuotohyökkäyksiä, mutta ne eivät sisälly tämän kurssin oppimistavoitteisiin.</p></div>","frontmatter":{"path":"/luku-5/3-rakenteinen-tieto","title":"Rakenteisen tiedon toteutus ja siihen viittaaminen"}},"allPages":{"edges":[{"node":{"id":"5b6302a2-c64b-508c-91c4-2db0957cc4b2","frontmatter":{"path":"/arvostelu-ja-kokeet","title":"Arvostelu ja kokeet"}}},{"node":{"id":"799b0272-abdf-59f0-b9b3-03947af42427","frontmatter":{"path":"/credits","title":"Tekijänoikeudet ja lisenssit"}}},{"node":{"id":"82621c5a-f915-50d4-828d-8eede35fdbf7","frontmatter":{"path":"/opettajille","title":"Opettajille ja opinto-ohjaajille"}}},{"node":{"id":"6ed176ef-1be8-53dc-8513-8c4e14a7ce38","frontmatter":{"path":"/osaamistavoitteet","title":"Osaamistavoitteet"}}},{"node":{"id":"62fa7239-7639-50e3-accb-d209fb4f0984","frontmatter":{"path":"/","title":""}}},{"node":{"id":"2d5ef803-9204-51b7-8d1b-891f29cac1ab","frontmatter":{"path":"/tukivaylat","title":"Tukiväylät"}}},{"node":{"id":"9374d347-238d-5d15-a799-d9e134097e9c","frontmatter":{"path":"/usein-kysytyt-kysymykset","title":"Usein kysytyt kysymykset"}}},{"node":{"id":"25d93020-25bf-51eb-97b6-bdc2d0248ede","frontmatter":{"path":"/luku-10/1-tulkitseminen-ohjelman-suoritustapana","title":"Tulkitseminen ohjelman suoritustapana"}}},{"node":{"id":"a49be168-fcf3-5169-95ff-fbb93911c744","frontmatter":{"path":"/luku-10/3-java-ohjelmien-suoritustavat","title":"Java-ohjelmien suoritustavat"}}},{"node":{"id":"96acc546-7537-5245-af40-c0a343f43e57","frontmatter":{"path":"/luku-10/2-java-virtuaalikone","title":"Java virtuaalikone (JVM)"}}},{"node":{"id":"4e1f7d23-545a-578e-8502-1c016428d15a","frontmatter":{"path":"/luku-10/4-emulointi-suorittimen-toteutustapana","title":"Emulointi suorittimen toteutustapana"}}},{"node":{"id":"cc1cb9ab-8bc3-59eb-b373-ef1ef4682363","frontmatter":{"path":"/luku-10","title":"Luku 10: Tulkinta ja emulointi"}}},{"node":{"id":"f1365a76-4fbc-5542-9fa7-f3f1f5216696","frontmatter":{"path":"/luku-5/0-kertaus","title":"Perusteet-kurssin kertaus"}}},{"node":{"id":"22e14f18-d591-5b76-bc01-38d14cd680c5","frontmatter":{"path":"/luku-5/1-ttk-91","title":"Esimerkkitietokone ttk-91"}}},{"node":{"id":"d4832ed4-06c4-5023-94dd-c56d9b3c41aa","frontmatter":{"path":"/luku-5/2-valinta-ja-toistolauseet","title":"Ohjelmoinnin peruskäsitteet sekä valinta- ja toistolauseiden toteutus"}}},{"node":{"id":"adc41c13-389b-5ce4-a479-0caa5271449e","frontmatter":{"path":"/luku-5/4-optimoitu-koodi","title":"Optimoitu koodi"}}},{"node":{"id":"668ae475-1d6e-51a8-a31a-18fda782eae4","frontmatter":{"path":"/luku-5/3-rakenteinen-tieto","title":"Rakenteisen tiedon toteutus ja siihen viittaaminen"}}},{"node":{"id":"0ad1f9dc-df1c-5319-aab2-35699e72ce91","frontmatter":{"path":"/luku-5/5-titokone-titotrainer","title":"Titokone ja TitoTrainer"}}},{"node":{"id":"2373db22-c9f3-579a-83a5-7da1843c4181","frontmatter":{"path":"/luku-5","title":"Luku 5: Konekielinen ohjelmointi"}}},{"node":{"id":"9fb3f792-821e-5683-b13f-aa15c30ea444","frontmatter":{"path":"/luku-6/1-aliohjelmat","title":"Aliohjelmat, parametrityypit, aktivaatiotietue (AT)"}}},{"node":{"id":"b2137737-4997-5b6f-9c79-f81a20870ffe","frontmatter":{"path":"/luku-6/2-akt-tiet-rakentaminen","title":"Aktivaatiotietueen rakentaminen"}}},{"node":{"id":"d73cb6c1-d9fa-55c6-be7f-55c899bef652","frontmatter":{"path":"/luku-6/3-viiteparametrit","title":"Viiteparametrit ja ulostuloparametrit"}}},{"node":{"id":"6b15a20b-2879-57a1-b9a2-321c9c0bdeee","frontmatter":{"path":"/luku-6/4-kj-palvelut","title":"Käyttöjärjestelmäpalvelujen käyttö"}}},{"node":{"id":"9dd0cfca-308d-52e9-b7c9-87bd80b1e3ec","frontmatter":{"path":"/luku-6","title":"Luku 6: Aliohjelmien toteutus"}}},{"node":{"id":"550311b6-6492-58a1-ac20-c4c6ded21215","frontmatter":{"path":"/luku-7/1-vika-virhe-hairio","title":"Vika, virhe ja häiriö"}}},{"node":{"id":"d078f99d-62b5-5564-ba0d-0db0a1a125e9","frontmatter":{"path":"/luku-7/3-muisti-cache-ssd","title":"Järjestelmän sisäisten muistien toteutus"}}},{"node":{"id":"ea808cef-5af4-5657-a911-c57be158f85f","frontmatter":{"path":"/luku-7/2-tiedon-muuttumattomuus","title":"Tiedon muuttumattomuuden turvaaminen"}}},{"node":{"id":"416d64ce-5ffe-5e05-ba25-661028cbe13b","frontmatter":{"path":"/luku-7","title":"Luku 7: Tiedon muuttumattomuus ja erilaiset muistit"}}},{"node":{"id":"e0ee5976-ad00-5b27-8809-adc036d067bc","frontmatter":{"path":"/luku-8/1-muistihierarkia","title":"Muistihierarkia ja virtuaalimuisti"}}},{"node":{"id":"1ceaef01-e5c2-58d4-8898-e980f9d6ac9a","frontmatter":{"path":"/luku-8/2-tiedostot-massamuisti","title":"Tiedostojärjestelmä, tiedostot ja massamuisti"}}},{"node":{"id":"9b30c941-92d6-56de-9b5a-d476a488677a","frontmatter":{"path":"/luku-8/3-io-toteutus","title":"I/O:n toteutus"}}},{"node":{"id":"7967b05d-f768-543f-9069-20c79559cf74","frontmatter":{"path":"/luku-8","title":"Luku 8: Ulkoisen muistin käyttö ja I/O:n toteutus"}}},{"node":{"id":"a4421758-c50f-5cad-8743-46b4fa6d731f","frontmatter":{"path":"/luku-9/1-lausekielesta-suoritukseen","title":"Lausekielestä suoritukseen"}}},{"node":{"id":"d5e20fce-1056-5299-8c49-8e44bc54cdfc","frontmatter":{"path":"/luku-9/2-kaantaminen","title":"Kääntäminen"}}},{"node":{"id":"285cf4c9-0cf8-500b-848d-ad9d9a76ce11","frontmatter":{"path":"/luku-9/3-linkitys","title":"Linkitys"}}},{"node":{"id":"22e4b1ba-4ba7-5aad-98b6-0d4778090bca","frontmatter":{"path":"/luku-9/4-lataus","title":"Lataus"}}},{"node":{"id":"a18c72ea-cb8c-5f68-826e-b2e4ade4c972","frontmatter":{"path":"/luku-9","title":"Luku 9: Käännös, linkitys ja lataus"}}}]}},"pageContext":{}},"staticQueryHashes":["2283872788","994120085"]}