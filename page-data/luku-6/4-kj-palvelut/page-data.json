{"componentChunkName":"component---src-templates-course-content-template-js","path":"/luku-6/4-kj-palvelut","result":{"data":{"page":{"htmlAst":{"type":"element","tagName":"div","properties":{},"children":[{"type":"element","tagName":"div","properties":{},"children":[{"type":"element","tagName":"lead","properties":{},"children":[{"type":"text","value":"\nTässä osiossa esitellään käyttöjärjestelmäpalvelujen käyttö ja kuinka se eroaa tavallisten aliohjelmien käyttämisestä.\n"}]}]},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Käyttöjärjestelmäpalvelut kutsuttavina rutiineina"}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Käyttöjärjestelmä tarjoaa suorituksessa oleville ohjelmille erilaisia palveluja, kuten esimerkiksi oheislaitteiden käyttämisen. Näitä palveluja käytetään periaatteessa kahdella tavalla."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Palvelut voivat olla suoraan kutsuttavissa tavallisina aliohjelmina tai etuoikeutettuina aliohjelmina. Kaikki käyttöjärjestelmän osat eivät tarvitse etuoikeutettua suoritustilaa ja on turvallisempaa pitää mahdollisimman suuri osa koodista tavallisessa suoritustilassa suoritettavana. Esimerkkinä tällaisesta palvelusta voisi olla joku yleinen tulostuspalvelu. Palveluja kutsutaan tavallisilla call-aliohjelmakutsuillla."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Osa palveluista (esimerkiksi jotkut laiteajurit) vaativat kuitenkin etuoikeutettua suoritustilaa ja niitä kutsutaan tällöin svc-käskyillä. Svc-käsky vaihtaa suoritustilan etuoikeutetuksi samalla kun se siirtää kontrollin kutsutulle rutiinille. Etuoikeutetut palvelurutiinit ovat etukäteen kaikki tiedossa ja ne on usein nimetty pelkästään palvelun numeron mukaisesti. Esimerkiksi, ttk-91'ssä palvelurutiinin Halt (ohjelman suoritus päättyy) numero on 11, mikä on myös symbolin \"halt\" arvo."}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"text"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-text"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"     ...\n     svc sp, =halt"}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Parametrien välitys käyttöjärjestelmärutiineille voi olla erilaista kuin tavallisille aliohjelmille ja tapauskohtaista. Joissakin tapauksissa KJ-palvelupyynnön yhteydessä ei haluta muodostaa tavanomaista aktivaatiotietuetta ja parametrit välitetään yksinkertaisesti sovittujen rekistereiden avulla. Toisaalta taas, usein on ihan järkevää noudattaa samaa aktivaatiotietuerakennetta kuin tavallisten aliohjelmien yhteydessä."}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"text"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-text"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":";\n; laiteajurin DiskDriver=33 kutsu proseduraalisesti\n;\n      push  sp, =0             ; paluuarvo\n      push  sp, =FileBuffer    ; datapuskuri tiedon siirtoa varten\n      push  sp, ByteCnt        ; luettavien tavujen lukumäärä\n      push  sp, ptrFile        ; luettava tiedosto\n\n      svc   sp, =DiskDriver    ; lue laitteelta pyydetty määrä tavuja puskuriin\n      pop   sp, r1\n      jnzer r1, FileTrouble    ; käsittele virhetilanteet"}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Jos palvelu on suoritettu etuoikeutetussa tilassa, alkuperäinen suorittimen suoritustila (yleensä tavallinen suoritustila) täytyy palauttaa palvelusta paluun yhteydessä. Tätä varten on olemassa yleensä jokin etuoikeutettu konekäsky (esim. iret eli interrupt return). Aikaisemmin vallinnut suoritustila täytyy tietenkin tallettaa johonkin, esimerkiksi pinoon vanhan PC:n ja vanhan FP:n yhteyteen."}]},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Käyttöjärjestelmäpalvelut prosesseina"}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Osa käyttöjärjestelmäpalveluista on toteutettu omina suoritettavina ohjelmina eli prosesseina. Niitä ei voi kutsua, mutta niille voi lähettää palvelupyyntöviestejä ja sitten jäädä odottamaan vastausviestiä. Viestien lähetys ja vastaanotto taas ovat normaaleja etuoikeutettuja palveluita, joita kutsutaan proseduraalisesti. Esimerkiksi, joidenkin laitteiden laiteajurit voi olla toteutettu näin."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Viestienvälitykseen liittyvän palvelun toteutus on monimutkaisempaa, koska siihen yleensä liittyy prosessin vaihtoja. Esimerkiksi, kun otetaan vastaan viesti joltain toiselta prosessilta, niin tyypillisesti vastaanottava prosessi odottaa odotustilassa, kunnes viesti on saapunut."}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"text"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-text"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":";\n; laiteajurin DiskDriver (pid=3254) käyttö viestien avulla\n;\npidDriver  equ 3254  ; laiteajuriprosessin tunniste\nMsgService equ   52\n      ...\n      ;  lähetä palvelupyyntöviesti\n      push  sp, =0             ; paluuarvo svc-kutsulle\n      push  sp, =pidDriver     ; viestin vastaanottajan tunniste (pid)\n      push  sp, =Send          ; viestin tyyppi\n      push  sp, =FileBuffer    ; datapuskuri tiedon siirtoa varten\n      push  sp, ByteCnt        ; luettavien tavujen lukumäärä\n      push  sp, ptrFile        ; luettava tiedosto\n\n      svc   sp, =MsgService    ; lähetä viesti DiskDrive-prosessille\n      pop   sp, r1\n      jnzer r1, SendTrouble    ; käsittele virhetilanteet\n\n      ; vastaanota vastaus palvelupyyntöön laiteajurilta\n      push  sp, =0             ; paluuarvo svc-kutsulle\n      push  sp, =pidDriver     ; viestin lähettäjän eli laiteajurin tunniste (pid)\n      push  sp, =Receive       ; viestin tyyppi\n      push  sp, =maxWaitTime   ; maksimiodotusaika viestin vastaanotolle\n      push  sp, =MsgBuffer     ; datapuskurin osoite tiedon siirtoa varten\n      push  sp, &MsgByteCnt    ; vastaanotettavien tavujen lukumäärä\n\n      svc   sp, =MsgService    ; vastaanota viesti DiskDriver-prosessilta\n      pop   sp, r1\n      jnzer r1, RecvTrouble    ; käsittele virhetilanteet"}]}]}]},{"type":"element","tagName":"text-box","properties":{"variant":"example","name":"Historiaa:  Williams Tube -muisti"},"children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Freddie Williams and Tom Kilburn kehittivät vuonna 1946 ensimmäisen RAM-muistin (Random Access Memory), jonka kaikki muistipaikat olivat aina yhtä nopeita käyttää. Sen koko oli aluksi 1024 bittiä. Putki oli kallis ja kesti käytössä vain noin kuukauden. Muisti perustui samanlaisiin katodisädeputkiin (CRT, Cathode Ray Tube) kuin näytötkin. Kun jotain kuvapistettä valaistiin, niin se hehkui varautuneena vähän aikaan ja talletti siten tietoa. Tiedon lukeminen tapahtui yrittämällä kirjoittaa data uudestaan 1-biteillä. Kirjoitusyritys antoi erilaisen tuloksen sen mukaan, olivatko bitit jo ennestään varautuneita tai ei. Kaikkia kuvapisteitä täytyi virkistää vähän väliä, jotta tieto säilyi. Ensimmäisessä yleiskäyttöisessä kaupallisessa tietokoneessa, Ferranti Mark I, oli 10000 bittiä Williams Tube -muistia."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"img","properties":{"src":"/53755493de768108932927f608af690a/ch-6-4-williams.svg","alt":"Katodisädeputki koteloituna metalliseen telineeseen. Kotelot ovat suorakaiteen muotoisia, joten niitä voi helposti asetella vierekkäin tai päällekkäin."},"children":[]}]},{"type":"element","tagName":"div","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"illustrations","properties":{"motive":"ch-6-4-williams"},"children":[]},{"type":"text","value":"\n"}]}]},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Yhteenveto"}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Tämä luku käsitteli aliohjelmien toteutusta. Kävimme läpi arvo- ja viiteparametrityypit ja esittelimme myös yleensä makroissa käytettävät arvoparametrit. Pääpaino oli aliohjelmien toteutuksella aktivointitietueen (AT) ja aktivointitietuepinon avulla. AT:n kautta välitetään parametrit ja sieltä varataan tila aliohjelman paikallisille tietorakenteille. Käyttöjärjestelmän aliohjelmina kutsuttavat palvelut ovat hyvin samankaltaisia kuin aliohjelmat, mutta kuitenkin erilaisia. Niiden kutsurajapinta on omien konekäskyjen (SVC, IRET, tms.) takana ja parametrien välitys voi tapahtua eri tavalla."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Vastaa alla olevaan kyselyyn kun olet valmis tämän luvun tehtävien kanssa."}]},{"type":"element","tagName":"div","properties":{},"children":[{"type":"element","tagName":"quiz","properties":{"id":"04aa3879-6945-502e-8627-68da6f3b0b5f"},"children":[]}]}]},"html":"<div><div><lead>\nTässä osiossa esitellään käyttöjärjestelmäpalvelujen käyttö ja kuinka se eroaa tavallisten aliohjelmien käyttämisestä.\n</lead></div><h2>Käyttöjärjestelmäpalvelut kutsuttavina rutiineina</h2><p>Käyttöjärjestelmä tarjoaa suorituksessa oleville ohjelmille erilaisia palveluja, kuten esimerkiksi oheislaitteiden käyttämisen. Näitä palveluja käytetään periaatteessa kahdella tavalla.</p><p>Palvelut voivat olla suoraan kutsuttavissa tavallisina aliohjelmina tai etuoikeutettuina aliohjelmina. Kaikki käyttöjärjestelmän osat eivät tarvitse etuoikeutettua suoritustilaa ja on turvallisempaa pitää mahdollisimman suuri osa koodista tavallisessa suoritustilassa suoritettavana. Esimerkkinä tällaisesta palvelusta voisi olla joku yleinen tulostuspalvelu. Palveluja kutsutaan tavallisilla call-aliohjelmakutsuillla.</p><p>Osa palveluista (esimerkiksi jotkut laiteajurit) vaativat kuitenkin etuoikeutettua suoritustilaa ja niitä kutsutaan tällöin svc-käskyillä. Svc-käsky vaihtaa suoritustilan etuoikeutetuksi samalla kun se siirtää kontrollin kutsutulle rutiinille. Etuoikeutetut palvelurutiinit ovat etukäteen kaikki tiedossa ja ne on usein nimetty pelkästään palvelun numeron mukaisesti. Esimerkiksi, ttk-91'ssä palvelurutiinin Halt (ohjelman suoritus päättyy) numero on 11, mikä on myös symbolin \"halt\" arvo.</p><div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">     ...\n     svc sp, =halt</code></pre></div><p>Parametrien välitys käyttöjärjestelmärutiineille voi olla erilaista kuin tavallisille aliohjelmille ja tapauskohtaista. Joissakin tapauksissa KJ-palvelupyynnön yhteydessä ei haluta muodostaa tavanomaista aktivaatiotietuetta ja parametrit välitetään yksinkertaisesti sovittujen rekistereiden avulla. Toisaalta taas, usein on ihan järkevää noudattaa samaa aktivaatiotietuerakennetta kuin tavallisten aliohjelmien yhteydessä.</p><div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">;\n; laiteajurin DiskDriver=33 kutsu proseduraalisesti\n;\n      push  sp, =0             ; paluuarvo\n      push  sp, =FileBuffer    ; datapuskuri tiedon siirtoa varten\n      push  sp, ByteCnt        ; luettavien tavujen lukumäärä\n      push  sp, ptrFile        ; luettava tiedosto\n\n      svc   sp, =DiskDriver    ; lue laitteelta pyydetty määrä tavuja puskuriin\n      pop   sp, r1\n      jnzer r1, FileTrouble    ; käsittele virhetilanteet</code></pre></div><p>Jos palvelu on suoritettu etuoikeutetussa tilassa, alkuperäinen suorittimen suoritustila (yleensä tavallinen suoritustila) täytyy palauttaa palvelusta paluun yhteydessä. Tätä varten on olemassa yleensä jokin etuoikeutettu konekäsky (esim. iret eli interrupt return). Aikaisemmin vallinnut suoritustila täytyy tietenkin tallettaa johonkin, esimerkiksi pinoon vanhan PC:n ja vanhan FP:n yhteyteen.</p><h2>Käyttöjärjestelmäpalvelut prosesseina</h2><p>Osa käyttöjärjestelmäpalveluista on toteutettu omina suoritettavina ohjelmina eli prosesseina. Niitä ei voi kutsua, mutta niille voi lähettää palvelupyyntöviestejä ja sitten jäädä odottamaan vastausviestiä. Viestien lähetys ja vastaanotto taas ovat normaaleja etuoikeutettuja palveluita, joita kutsutaan proseduraalisesti. Esimerkiksi, joidenkin laitteiden laiteajurit voi olla toteutettu näin.</p><p>Viestienvälitykseen liittyvän palvelun toteutus on monimutkaisempaa, koska siihen yleensä liittyy prosessin vaihtoja. Esimerkiksi, kun otetaan vastaan viesti joltain toiselta prosessilta, niin tyypillisesti vastaanottava prosessi odottaa odotustilassa, kunnes viesti on saapunut.</p><div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">;\n; laiteajurin DiskDriver (pid=3254) käyttö viestien avulla\n;\npidDriver  equ 3254  ; laiteajuriprosessin tunniste\nMsgService equ   52\n      ...\n      ;  lähetä palvelupyyntöviesti\n      push  sp, =0             ; paluuarvo svc-kutsulle\n      push  sp, =pidDriver     ; viestin vastaanottajan tunniste (pid)\n      push  sp, =Send          ; viestin tyyppi\n      push  sp, =FileBuffer    ; datapuskuri tiedon siirtoa varten\n      push  sp, ByteCnt        ; luettavien tavujen lukumäärä\n      push  sp, ptrFile        ; luettava tiedosto\n\n      svc   sp, =MsgService    ; lähetä viesti DiskDrive-prosessille\n      pop   sp, r1\n      jnzer r1, SendTrouble    ; käsittele virhetilanteet\n\n      ; vastaanota vastaus palvelupyyntöön laiteajurilta\n      push  sp, =0             ; paluuarvo svc-kutsulle\n      push  sp, =pidDriver     ; viestin lähettäjän eli laiteajurin tunniste (pid)\n      push  sp, =Receive       ; viestin tyyppi\n      push  sp, =maxWaitTime   ; maksimiodotusaika viestin vastaanotolle\n      push  sp, =MsgBuffer     ; datapuskurin osoite tiedon siirtoa varten\n      push  sp, &amp;MsgByteCnt    ; vastaanotettavien tavujen lukumäärä\n\n      svc   sp, =MsgService    ; vastaanota viesti DiskDriver-prosessilta\n      pop   sp, r1\n      jnzer r1, RecvTrouble    ; käsittele virhetilanteet</code></pre></div><text-box variant=\"example\" name=\"Historiaa:  Williams Tube -muisti\"><p>Freddie Williams and Tom Kilburn kehittivät vuonna 1946 ensimmäisen RAM-muistin (Random Access Memory), jonka kaikki muistipaikat olivat aina yhtä nopeita käyttää. Sen koko oli aluksi 1024 bittiä. Putki oli kallis ja kesti käytössä vain noin kuukauden. Muisti perustui samanlaisiin katodisädeputkiin (CRT, Cathode Ray Tube) kuin näytötkin. Kun jotain kuvapistettä valaistiin, niin se hehkui varautuneena vähän aikaan ja talletti siten tietoa. Tiedon lukeminen tapahtui yrittämällä kirjoittaa data uudestaan 1-biteillä. Kirjoitusyritys antoi erilaisen tuloksen sen mukaan, olivatko bitit jo ennestään varautuneita tai ei. Kaikkia kuvapisteitä täytyi virkistää vähän väliä, jotta tieto säilyi. Ensimmäisessä yleiskäyttöisessä kaupallisessa tietokoneessa, Ferranti Mark I, oli 10000 bittiä Williams Tube -muistia.</p><p><img src=\"/53755493de768108932927f608af690a/ch-6-4-williams.svg\" alt=\"Katodisädeputki koteloituna metalliseen telineeseen. Kotelot ovat suorakaiteen muotoisia, joten niitä voi helposti asetella vierekkäin tai päällekkäin.\"></p><div>\n<illustrations motive=\"ch-6-4-williams\"></illustrations>\n</div></text-box><h2>Yhteenveto</h2><p>Tämä luku käsitteli aliohjelmien toteutusta. Kävimme läpi arvo- ja viiteparametrityypit ja esittelimme myös yleensä makroissa käytettävät arvoparametrit. Pääpaino oli aliohjelmien toteutuksella aktivointitietueen (AT) ja aktivointitietuepinon avulla. AT:n kautta välitetään parametrit ja sieltä varataan tila aliohjelman paikallisille tietorakenteille. Käyttöjärjestelmän aliohjelmina kutsuttavat palvelut ovat hyvin samankaltaisia kuin aliohjelmat, mutta kuitenkin erilaisia. Niiden kutsurajapinta on omien konekäskyjen (SVC, IRET, tms.) takana ja parametrien välitys voi tapahtua eri tavalla.</p><p>Vastaa alla olevaan kyselyyn kun olet valmis tämän luvun tehtävien kanssa.</p><div><quiz id=\"04aa3879-6945-502e-8627-68da6f3b0b5f\"></quiz></div></div>","frontmatter":{"path":"/luku-6/4-kj-palvelut","title":"Käyttöjärjestelmäpalvelujen käyttö"}},"allPages":{"edges":[{"node":{"id":"5b6302a2-c64b-508c-91c4-2db0957cc4b2","frontmatter":{"path":"/arvostelu-ja-kokeet","title":"Arvostelu ja kokeet"}}},{"node":{"id":"799b0272-abdf-59f0-b9b3-03947af42427","frontmatter":{"path":"/credits","title":"Tekijänoikeudet ja lisenssit"}}},{"node":{"id":"82621c5a-f915-50d4-828d-8eede35fdbf7","frontmatter":{"path":"/opettajille","title":"Opettajille ja opinto-ohjaajille"}}},{"node":{"id":"6ed176ef-1be8-53dc-8513-8c4e14a7ce38","frontmatter":{"path":"/osaamistavoitteet","title":"Osaamistavoitteet"}}},{"node":{"id":"62fa7239-7639-50e3-accb-d209fb4f0984","frontmatter":{"path":"/","title":""}}},{"node":{"id":"2d5ef803-9204-51b7-8d1b-891f29cac1ab","frontmatter":{"path":"/tukivaylat","title":"Tukiväylät"}}},{"node":{"id":"9374d347-238d-5d15-a799-d9e134097e9c","frontmatter":{"path":"/usein-kysytyt-kysymykset","title":"Usein kysytyt kysymykset"}}},{"node":{"id":"25d93020-25bf-51eb-97b6-bdc2d0248ede","frontmatter":{"path":"/luku-10/1-tulkitseminen-ohjelman-suoritustapana","title":"Tulkitseminen ohjelman suoritustapana"}}},{"node":{"id":"a49be168-fcf3-5169-95ff-fbb93911c744","frontmatter":{"path":"/luku-10/3-java-ohjelmien-suoritustavat","title":"Java-ohjelmien suoritustavat"}}},{"node":{"id":"96acc546-7537-5245-af40-c0a343f43e57","frontmatter":{"path":"/luku-10/2-java-virtuaalikone","title":"Java virtuaalikone (JVM)"}}},{"node":{"id":"4e1f7d23-545a-578e-8502-1c016428d15a","frontmatter":{"path":"/luku-10/4-emulointi-suorittimen-toteutustapana","title":"Emulointi suorittimen toteutustapana"}}},{"node":{"id":"cc1cb9ab-8bc3-59eb-b373-ef1ef4682363","frontmatter":{"path":"/luku-10","title":"Luku 10: Tulkinta ja emulointi"}}},{"node":{"id":"f1365a76-4fbc-5542-9fa7-f3f1f5216696","frontmatter":{"path":"/luku-5/0-kertaus","title":"Perusteet-kurssin kertaus"}}},{"node":{"id":"22e14f18-d591-5b76-bc01-38d14cd680c5","frontmatter":{"path":"/luku-5/1-ttk-91","title":"Esimerkkitietokone ttk-91"}}},{"node":{"id":"d4832ed4-06c4-5023-94dd-c56d9b3c41aa","frontmatter":{"path":"/luku-5/2-valinta-ja-toistolauseet","title":"Ohjelmoinnin peruskäsitteet sekä valinta- ja toistolauseiden toteutus"}}},{"node":{"id":"adc41c13-389b-5ce4-a479-0caa5271449e","frontmatter":{"path":"/luku-5/4-optimoitu-koodi","title":"Optimoitu koodi"}}},{"node":{"id":"668ae475-1d6e-51a8-a31a-18fda782eae4","frontmatter":{"path":"/luku-5/3-rakenteinen-tieto","title":"Rakenteisen tiedon toteutus ja siihen viittaaminen"}}},{"node":{"id":"0ad1f9dc-df1c-5319-aab2-35699e72ce91","frontmatter":{"path":"/luku-5/5-titokone-titotrainer","title":"Titokone ja TitoTrainer"}}},{"node":{"id":"2373db22-c9f3-579a-83a5-7da1843c4181","frontmatter":{"path":"/luku-5","title":"Luku 5: Konekielinen ohjelmointi"}}},{"node":{"id":"9fb3f792-821e-5683-b13f-aa15c30ea444","frontmatter":{"path":"/luku-6/1-aliohjelmat","title":"Aliohjelmat, parametrityypit, aktivaatiotietue (AT)"}}},{"node":{"id":"b2137737-4997-5b6f-9c79-f81a20870ffe","frontmatter":{"path":"/luku-6/2-akt-tiet-rakentaminen","title":"Aktivaatiotietueen rakentaminen"}}},{"node":{"id":"d73cb6c1-d9fa-55c6-be7f-55c899bef652","frontmatter":{"path":"/luku-6/3-viiteparametrit","title":"Viiteparametrit ja ulostuloparametrit"}}},{"node":{"id":"6b15a20b-2879-57a1-b9a2-321c9c0bdeee","frontmatter":{"path":"/luku-6/4-kj-palvelut","title":"Käyttöjärjestelmäpalvelujen käyttö"}}},{"node":{"id":"9dd0cfca-308d-52e9-b7c9-87bd80b1e3ec","frontmatter":{"path":"/luku-6","title":"Luku 6: Aliohjelmien toteutus"}}},{"node":{"id":"550311b6-6492-58a1-ac20-c4c6ded21215","frontmatter":{"path":"/luku-7/1-vika-virhe-hairio","title":"Vika, virhe ja häiriö"}}},{"node":{"id":"d078f99d-62b5-5564-ba0d-0db0a1a125e9","frontmatter":{"path":"/luku-7/3-muisti-cache-ssd","title":"Järjestelmän sisäisten muistien toteutus"}}},{"node":{"id":"ea808cef-5af4-5657-a911-c57be158f85f","frontmatter":{"path":"/luku-7/2-tiedon-muuttumattomuus","title":"Tiedon muuttumattomuuden turvaaminen"}}},{"node":{"id":"416d64ce-5ffe-5e05-ba25-661028cbe13b","frontmatter":{"path":"/luku-7","title":"Luku 7: Tiedon muuttumattomuus ja erilaiset muistit"}}},{"node":{"id":"e0ee5976-ad00-5b27-8809-adc036d067bc","frontmatter":{"path":"/luku-8/1-muistihierarkia","title":"Muistihierarkia ja virtuaalimuisti"}}},{"node":{"id":"1ceaef01-e5c2-58d4-8898-e980f9d6ac9a","frontmatter":{"path":"/luku-8/2-tiedostot-massamuisti","title":"Tiedostojärjestelmä, tiedostot ja massamuisti"}}},{"node":{"id":"9b30c941-92d6-56de-9b5a-d476a488677a","frontmatter":{"path":"/luku-8/3-io-toteutus","title":"I/O:n toteutus"}}},{"node":{"id":"7967b05d-f768-543f-9069-20c79559cf74","frontmatter":{"path":"/luku-8","title":"Luku 8: Ulkoisen muistin käyttö ja I/O:n toteutus"}}},{"node":{"id":"a4421758-c50f-5cad-8743-46b4fa6d731f","frontmatter":{"path":"/luku-9/1-lausekielesta-suoritukseen","title":"Lausekielestä suoritukseen"}}},{"node":{"id":"d5e20fce-1056-5299-8c49-8e44bc54cdfc","frontmatter":{"path":"/luku-9/2-kaantaminen","title":"Kääntäminen"}}},{"node":{"id":"285cf4c9-0cf8-500b-848d-ad9d9a76ce11","frontmatter":{"path":"/luku-9/3-linkitys","title":"Linkitys"}}},{"node":{"id":"22e4b1ba-4ba7-5aad-98b6-0d4778090bca","frontmatter":{"path":"/luku-9/4-lataus","title":"Lataus"}}},{"node":{"id":"a18c72ea-cb8c-5f68-826e-b2e4ade4c972","frontmatter":{"path":"/luku-9","title":"Luku 9: Käännös, linkitys ja lataus"}}}]}},"pageContext":{}},"staticQueryHashes":["2283872788","994120085"]}